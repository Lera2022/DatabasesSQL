START TRANSACTION;
SELECT total FROM accounts WHERE user_id = 2;
UPDATE accounts SET total = total - 3000 WHERE user_id = 2;
UPDATE accounts SET total = total + 3000 WHERE user_id IS NULL;
COMMIT;

CREATE TEMPORARY TABLE table_name(
  column_1_definition,
  column_2_definition,
  ...,
  table_constraints
);

SET @variable_name := value;
SET @counter := 100;

SELECT @variable_name:= 100;

SELECT @variable_name := value;

SELECT
    @msrp:=MAX(msrp)
FROM
    products;

IF(expr,if_true_expr,if_false_expr)

SELECT IF(400<2000, "YES", "NO");

SELECT IF(1 = 2,'true','false');  -- false
SELECT IF(1 = 1,'true','false'); -- true

SELECT
	SUM(IF(status = 'Shipped', 1, 0)) AS Shipped,
    SUM(IF(status = 'Cancelled', 1, 0)) AS Cancelled
FROM
	orders;

SELECT DISTINCT
    status
FROM
    orders
ORDER BY status;

SELECT
    COUNT(IF(status = 'Cancelled', 1, NULL)) 'Cancelled',
    COUNT(IF(status = 'Disputed', 1, NULL)) 'Disputed',
    COUNT(IF(status = 'In process', 1, NULL)) 'In process',
    COUNT(IF(status = 'On hold', 1, NULL)) 'On hold',
    COUNT(IF(status = 'Resolved', 1, NULL)) 'Resolved',
    COUNT(IF(status = 'Shipped', 1, NULL)) 'Shipped'
FROM
    orders;

CREATE PROCEDURE procedure_name [ (parameter datatype [, parameter datatype]) ]

BEGIN
    declaration_section
    executable_section
END;

mysql> DELIMITER %%
mysql> CREATE PROCEDURE Filter ()
    -> BEGIN
    -> SELECT * FROM data.record WHERE Country LIKE '%ia';
    -> END &&
Qery OK, 0 rows affected (0.11 sec)

mysql> DELIMITER;

[ label_name: ] WHILE condition DO

    {... statements...}

END WHILE [ label_name ];

mysql>
mysql> SELECT magazine_incoming.id_incoming, products.name, products.author,
magazine_incoming.quantity
    -> FROM magazine_incoming, products
    -> WHERE magazine_incoming.id_product=products.id_product;

SELECT magazine_incoming.id_incoming, products.name, products.author,
magazine_incoming.quantity
FROM magazine_incoming, products
WHERE magazine_incoming.id_product=products.id_product AND
magazine_incoming.id_incoming=1;

SELECT magazine_incoming.id_incoming, products.name, products.author,
magazine_incoming.quantity
FROM magazine_incoming, products
WHERE magazine_incoming.id_product=products.id_product AND
magazine_incoming.id_incoming=2;

SELECT magazine_incoming.id_incoming, products.name, products.author,
magazine_incoming.quantity
FROM magazine_incoming, products
WHERE magazine_incoming.id_product=products.id_product AND
magazine_incoming.id_incoming=3;

DECLARE i INT DEFAULT 3;
  WHILE i>0 DO
    SELECT magazine_incoming.id_incoming, products.name, products.author,
    magazine_incoming.quantity
    FROM magazine_incoming, products
    WHERE magazine_incoming.id_product=products.id_product AND
    magazine_incoming.id_incoming=i;
    SET i=i-1;
  END WHILE;

mysql> DELIMITER //
mysql> CREATE PROCEDURE books ()
    ->  begin
    ->    DECLARE i INT DEFAULT 3;
    -> WHILE i>0 DO
    ->  SELECT magazine_incoming.id_incoming, products.name, products.author,
magazine_incoming.quantity
    ->      FROM magazine_incoming, products
    ->      WHERE magazine_incoming.id_product=products.id_product AND
magazine_incoming.id_incoming=i;
    ->  SET i=i-1;
    -> END WHILE;
    ->  end
    -> //

CREATE PROCEDURE books (IN num INT)
  begin
      DECLARE i INT DEFAULT 0;
      IF (num>0) THEN
        WHILE i < num DO
            SELECT magazine_incoming.id_incoming, products.name, products.author,
magazine_incoming.quantity
            FROM magazine_incoming, products
            WHERE magazine_incoming.id_product=products.id_product AND
magazine_incoming.id_incoming=i;
            SET i=i+1;
        END WHILE;
      ELSE
          SELECT 'Задайте правильный параметр';
      END IF;
  end
//